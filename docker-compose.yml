services:
  app:
    build:
      context: .
    volumes:
      - ./backend:/app/backend
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py wait_for_db &&
             poetry run python manage.py migrate &&
             poetry run python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - MONO_X_TOKEN=${MONO_X_TOKEN}
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  dev-db-data:
